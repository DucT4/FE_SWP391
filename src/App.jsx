import { useState, useEffect } from 'react'
import Login from './components/Login'
import RecallCampaign from './components/RecallCampaign'
import authService from './services/authService'
import './App.css'
import History from './components/History'

function App() {
  const [user, setUser] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  console.log('üîµ App render - user state:', user);

  // Ki·ªÉm tra user ƒë√£ ƒëƒÉng nh·∫≠p ch∆∞a khi app kh·ªüi ƒë·ªông
  useEffect(() => {
    const currentUser = authService.getCurrentUser()
    if (currentUser) {
      setUser(currentUser)
    }
    setIsLoading(false)
  }, [])

  const handleLogin = (userData) => {
    // userData c√≥ c·∫•u tr√∫c: { token: "...", userId, username, role }
    console.log('üîµ App.jsx - handleLogin ƒë∆∞·ª£c g·ªçi v·ªõi data:', userData);
    console.log('üîµ userData.role:', userData.role);
    setUser(userData)
    console.log('‚úÖ App.jsx - setUser ƒë√£ ƒë∆∞·ª£c g·ªçi');
    
    // Force re-render b·∫±ng c√°ch log state ngay sau khi set
    setTimeout(() => {
      console.log('üîç User state sau 100ms:', userData);
    }, 100);
  }

  const handleLogout = () => {
    authService.logout()
    setUser(null)
  }

  // ƒêang ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  if (isLoading) {
    return (
      <div className="d-flex justify-content-center align-items-center min-vh-100">
        <div className="spinner-border text-primary" role="status">
          <span className="visually-hidden">Loading...</span>
        </div>
      </div>
    )
  }

  // Ch∆∞a ƒëƒÉng nh·∫≠p => hi·ªÉn th·ªã trang Login
  if (!user) {
    return <Login onLogin={handleLogin} />
  }

  // ƒê√£ ƒëƒÉng nh·∫≠p => routing theo role
  const userRole = user.role || authService.getUserRole()
  
  console.log('üîç Checking role:', userRole);
  
  // ROLE_SC_STAFF ho·∫∑c SC_STAFF (Nh√¢n vi√™n trung t√¢m d·ªãch v·ª•)
  if (userRole === 'ROLE_SC_STAFF' || userRole === 'SC_STAFF') {
    console.log('‚úÖ ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn RecallCampaign cho SC_STAFF');
    return <RecallCampaign onLogout={handleLogout} userRole={userRole} />
  }
  
  // ROLE_SC_TECHNICIAN ho·∫∑c SC_TECHNICIAN (K·ªπ thu·∫≠t vi√™n trung t√¢m d·ªãch v·ª•)
  if (userRole === 'ROLE_SC_TECHNICIAN' || userRole === 'SC_TECHNICIAN') {
    console.log('‚úÖ ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn RecallCampaign cho SC_TECHNICIAN');
    return <RecallCampaign onLogout={handleLogout} userRole={userRole} />
  }
  
  // ROLE_SC_MANAGER ho·∫∑c SC_MANAGER (Qu·∫£n l√Ω trung t√¢m d·ªãch v·ª•)
  if (userRole === 'ROLE_SC_MANAGER' || userRole === 'SC_MANAGER') {
    console.log('‚úÖ ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn RecallCampaign cho SC_MANAGER');
    return <RecallCampaign onLogout={handleLogout} userRole={userRole} />
  }
  
  // ROLE_EVM_STAFF ho·∫∑c EVM_STAFF (Nh√¢n vi√™n nh√† s·∫£n xu·∫•t)
  if (userRole === 'ROLE_EVM_STAFF' || userRole === 'EVM_STAFF') {
    console.log('‚úÖ ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn RecallCampaign cho EVM_STAFF');
    // T·∫°m th·ªùi hi·ªÉn th·ªã RecallCampaign, sau n√†y s·∫Ω t·∫°o trang ri√™ng cho EVM
    return <RecallCampaign onLogout={handleLogout} userRole={userRole} />
  }

  if (userRole === 'ROLE_EVM_STAFF' || userRole === 'EVM_STAFF') {
    console.log('‚úÖ ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn RecallCampaign cho EVM_STAFF');
    // T·∫°m th·ªùi hi·ªÉn th·ªã RecallCampaign, sau n√†y s·∫Ω t·∫°o trang ri√™ng cho EVM
    return <History onLogout={handleLogout} userRole={userRole} />
  }

  // Kh√¥ng c√≥ role h·ª£p l·ªá => logout
  console.error('‚ùå Role kh√¥ng h·ª£p l·ªá:', userRole);
  authService.logout()
  return <Login onLogin={handleLogin} />
}

export default App

